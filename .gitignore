# Generated by Cargo
# will have compiled files and executables
/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

build/
.vscode/

# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

target
build/*
*.rlib
*.sdb
*.bin
*.elf
*.o
*.ll
.gdbinit
.gdb_history

## OS X
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear on external disk
.Spotlight-V100
.Trashes

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

## Log Files
*.log

# Files generated by rustfmt
*.bk

# rustdoc folder
doc/rustdoc

# Backup and swap files
*~
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-v][a-z]
[._]sw[a-p]

/.idea

# Cargo.lock files have a lot of noisy churn during development. Instead they
# are manually included for releases.
Cargo.lock

# The QEMU directory
tools/qemu

# Python scripts
__pycache__

# Node.js modules
node_modules
package-lock.json

# Local Netlify folder
.netlify

# FuseSoC build files
boards/swervolf/binary.hex
boards/swervolf/build/
boards/swervolf/fusesoc.conf
boards/swervolf/fusesoc_libraries/
